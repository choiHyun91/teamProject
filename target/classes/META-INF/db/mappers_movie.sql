-- ★ ★ ★ 기본(더미)데이터 입력 ★ ★ ★


-- 영화관 기본데이터 입력
INSERT INTO CINEMA VALUES ('YONGSAN', 'MAC용산아이파크몰');
INSERT INTO CINEMA VALUES ('GANGNAM', 'MAC강남');
INSERT INTO CINEMA VALUES ('MIA', 'MAC미아');
INSERT INTO CINEMA VALUES ('HONGDAE', 'MAC홍대');
INSERT INTO CINEMA VALUES ('DONGDAEMUN', 'MAC동대문');

-- 상영관(스크린) 기본데이터 입력
INSERT INTO SCREEN VALUES ('Y01', '용산1관', 'YONGSAN');
INSERT INTO SCREEN VALUES ('Y02', '용산2관', 'YONGSAN');
INSERT INTO SCREEN VALUES ('Y03', '용산3관', 'YONGSAN');
INSERT INTO SCREEN VALUES ('Y04', '용산4관', 'YONGSAN');
INSERT INTO SCREEN VALUES ('Y05', '용산5관', 'YONGSAN');
INSERT INTO SCREEN VALUES ('G01', '강남1관', 'GANGNAM');
INSERT INTO SCREEN VALUES ('G02', '강남2관', 'GANGNAM');
INSERT INTO SCREEN VALUES ('G03', '강남3관', 'GANGNAM');
INSERT INTO SCREEN VALUES ('G04', '강남4관', 'GANGNAM');
INSERT INTO SCREEN VALUES ('G05', '강남5관', 'GANGNAM');
INSERT INTO SCREEN VALUES ('M01', '미아1관', 'MIA');
INSERT INTO SCREEN VALUES ('M02', '미아2관', 'MIA');
INSERT INTO SCREEN VALUES ('M03', '미아3관', 'MIA');
INSERT INTO SCREEN VALUES ('M04', '미아4관', 'MIA');
INSERT INTO SCREEN VALUES ('M05', '미아5관', 'MIA');
INSERT INTO SCREEN VALUES ('H01', '홍대1관', 'HONGDAE');
INSERT INTO SCREEN VALUES ('H02', '홍대2관', 'HONGDAE');
INSERT INTO SCREEN VALUES ('H03', '홍대3관', 'HONGDAE');
INSERT INTO SCREEN VALUES ('H04', '홍대4관', 'HONGDAE');
INSERT INTO SCREEN VALUES ('H05', '홍대5관', 'HONGDAE');
INSERT INTO SCREEN VALUES ('D01', '동대문1관', 'DONGDAEMUN');
INSERT INTO SCREEN VALUES ('D02', '동대문2관', 'DONGDAEMUN');
INSERT INTO SCREEN VALUES ('D03', '동대문3관', 'DONGDAEMUN');
INSERT INTO SCREEN VALUES ('D04', '동대문4관', 'DONGDAEMUN');
INSERT INTO SCREEN VALUES ('D05', '동대문5관', 'DONGDAEMUN');

-- 좌석 기본데이터 입력
BEGIN
FOR i IN 1..10 LOOP
    BEGIN
    FOR j IN 1..10 LOOP
    INSERT INTO SEAT (SEATNO, SEATROW, SEATCOL)
        VALUES (CONCAT(CHR(64+j), i), CHR(64+j), i);
    END LOOP;
    END;
END LOOP;
END;
/

-- 시간(상영시간) 기본데이터 입력
INSERT INTO TIME VALUES ('8', '08:00');
INSERT INTO TIME VALUES ('11', '11:00');
INSERT INTO TIME VALUES ('14', '14:00');
INSERT INTO TIME VALUES ('17', '17:00');
INSERT INTO TIME VALUES ('20', '20:00');
INSERT INTO TIME VALUES ('23', '23:00');



-- ★ ★ ★ Member.xml (mapper) ★ ★ ★

-- id = loginMember (회원로그인)
SELECT M.*, MEMBERGRADENAME FROM MEMBER M, MEMBERGRADE MG WHERE M.MEMBERGRADENO=MG.MEMBERGRADENO AND MEMBERID='aaa' AND MEMBERPW='123';

-- ★ ★ ★ Movie.xml (mapper) ★ ★ ★

-- id = insertMovie (영화등록)
INSERT INTO MOVIE VALUES (MOVIE_SEQ.NEXTVAL, '샤잠', '데이비드 F. 샌드버그', '제커리 레비, 애셔 앤젤', '액션', '미국', '12세', '132분', '2019-04-03', 'noimg.jpg', 'notrailer', '샤잠은 히어로?');
INSERT INTO MOVIE VALUES (MOVIE_SEQ.NEXTVAL, '샤잠2', '데이비드 F. 샌드버그', '제커리 레비, 애셔 앤젤', '액션', '미국', '12세', '132분', '2019-04-03', 'noimg.jpg', 'notrailer', '샤잠은 히어로?');
INSERT INTO MOVIE VALUES (MOVIE_SEQ.NEXTVAL, '샤잠3', '데이비드 F. 샌드버그', '제커리 레비, 애셔 앤젤', '액션', '미국', '12세', '132분', '2019-04-03', 'noimg.jpg', 'notrailer', '샤잠은 히어로?');
-- id = modifyMovie (영화수정)
UPDATE MOVIE SET
                MOVIENAME='쌰잠',
                MOVIEDIRECTOR='데비드',
                MOVIEACTOR='빵',
                MOVIECOUNTRY='머국',
                MOVIEGRADE='15세',
                MOVIERUNNINGTIME='여러분',
                MOVIERELEASE='2019-05-06',
                MOVIEIMAGE='noimg.jpg',
                MOVIETRAILER='notrailer',
                MOVIESTORY='쌰잠은 짭'
                WHERE MOVIENO=2;
-- id = getMovie (영화 1개 정보 가져오기)
SELECT M.*, MOVIERATING FROM MOVIE M LEFT JOIN (SELECT MOVIENO, AVG(MOVIERATINGPOINT) MOVIERATING FROM MOVIERATING GROUP BY MOVIENO) MR ON M.MOVIENO=MR.MOVIENO WHERE M.MOVIENO=1;
-- id = totCntMovie (등록된 영화의 총 갯수)
SELECT COUNT(*) FROM MOVIE;
-- id = listMovie (영화리스트 PAGING)
SELECT * FROM (SELECT ROWNUM RN, M.* FROM (SELECT M.*, MOVIERATING FROM MOVIE M LEFT JOIN (SELECT MOVIENO, AVG(MOVIERATINGPOINT) MOVIERATING FROM MOVIERATING GROUP BY MOVIENO) MR ON M.MOVIENO=MR.MOVIENO ORDER BY MOVIERELEASE DESC) M) WHERE RN BETWEEN 1 AND 10;
-- id = searchCntMovie (검색된 영화의 갯수)
SELECT COUNT(*) FROM MOVIE WHERE MOVIENAME LIKE '%잠%' AND MOVIEGENRE='액션' AND MOVIECOUNTRY='미국' AND TO_CHAR(MOVIERELEASE, 'YYYY') BETWEEN '2010%' AND '2019%';
-- id = searchMovie (무비파인더)
SELECT * FROM (SELECT ROWNUM RN, M.* FROM
        (SELECT M.*, MOVIERATING FROM MOVIE M LEFT JOIN (SELECT MOVIENO, AVG(MOVIERATINGPOINT) MOVIERATING FROM MOVIERATING GROUP BY MOVIENO) MR ON M.MOVIENO=MR.MOVIENO WHERE MOVIENAME LIKE '%잠%' AND MOVIEGENRE='액션' AND MOVIECOUNTRY='미국' AND TO_CHAR(MOVIERELEASE, 'YYYY') BETWEEN '2010%' AND '2019%' ORDER BY MOVIERELEASE DESC) M)
        WHERE RN BETWEEN 1 AND 10;
-- id = beforeReleaseMovie (개봉전영화)
SELECT * FROM MOVIE WHERE MOVIERELEASE > SYSDATE ORDER BY MOVIERELEASE;
-- id = nowMovie (현재 상영중인 영화)
SELECT M.MOVIENO, MOVIENAME, MOVIEGRADE, MOVIEIMAGE, MOVIERELEASE, MOVIERATING FROM (SELECT M.*, MOVIERATING FROM MOVIE M LEFT JOIN (SELECT MOVIENO, AVG(MOVIERATINGPOINT) MOVIERATING FROM MOVIERATING GROUP BY MOVIENO) MR
        ON M.MOVIENO=MR.MOVIENO) M INNER JOIN SCREENUP SU ON M.MOVIENO=SU.MOVIENO WHERE SYSDATE>=MOVIERELEASE
        GROUP BY M.MOVIENO, MOVIENAME, MOVIEGRADE, MOVIEIMAGE, MOVIERELEASE, MOVIERATING;
-- id = scheduleMovie (상영예정작)
SELECT M.MOVIENO, MOVIENAME, MOVIEGRADE, MOVIEIMAGE, MOVIERELEASE, MOVIERATING FROM (SELECT M.*, MOVIERATING FROM MOVIE M LEFT JOIN (SELECT MOVIENO, AVG(MOVIERATINGPOINT) MOVIERATING FROM MOVIERATING GROUP BY MOVIENO) MR
        ON M.MOVIENO=MR.MOVIENO) M INNER JOIN SCREENUP SU ON M.MOVIENO=SU.MOVIENO WHERE MOVIERELEASE>SYSDATE
        GROUP BY M.MOVIENO, MOVIENAME, MOVIEGRADE, MOVIEIMAGE, MOVIERELEASE, MOVIERATING;
-- id = selectMovie (예매가능한 영화)
SELECT M.MOVIENO, MOVIENAME, MOVIEGRADE, MOVIEIMAGE, MOVIERELEASE, MOVIERATING FROM (SELECT M.*, MOVIERATING FROM MOVIE M LEFT JOIN (SELECT MOVIENO, AVG(MOVIERATINGPOINT) MOVIERATING FROM MOVIERATING GROUP BY MOVIENO) MR
        ON M.MOVIENO=MR.MOVIENO) M INNER JOIN SCREENUP SU ON M.MOVIENO=SU.MOVIENO WHERE SCREENUPENDDATE > SYSDATE-1
        GROUP BY M.MOVIENO, MOVIENAME, MOVIEGRADE, MOVIEIMAGE, MOVIERELEASE, MOVIERATING ORDER BY MOVIERELEASE;
-- id = activeBooking (영화의 예매가능여부)
SELECT COUNT(*) FROM SCREENUP WHERE MOVIENO=1 AND SCREENUPENDDATE>=SYSDATE;
-- id = movieSelection (예매가능한 영화 10개)
SELECT * FROM (SELECT ROWNUM RN, M.* FROM(SELECT M.MOVIENO, MOVIEIMAGE, MOVIETRAILER FROM (SELECT M.*, MOVIERATING FROM MOVIE M LEFT JOIN (SELECT MOVIENO, AVG(MOVIERATINGPOINT) MOVIERATING FROM MOVIERATING GROUP BY MOVIENO) MR
        ON M.MOVIENO=MR.MOVIENO) M INNER JOIN SCREENUP SU ON M.MOVIENO=SU.MOVIENO WHERE SCREENUPENDDATE > SYSDATE-1
        GROUP BY M.MOVIENO, MOVIEIMAGE, MOVIETRAILER, MOVIERELEASE ORDER BY MOVIERELEASE DESC) M) WHERE RN BETWEEN 1 AND 10;

-- ★ ★ ★ MovieRating.xml (mapper) ★ ★ ★

-- id = insertMovieRating (평점&한줄평 등록)
INSERT INTO MOVIERATING VALUES (MOVIERATING_SEQ.NEXTVAL, 1, 'aaa', 8, '샤잠 재밌네요');
INSERT INTO MOVIERATING VALUES (MOVIERATING_SEQ.NEXTVAL, 1, 'bbb', 5, '샤잠 잼없네요');
INSERT INTO MOVIERATING VALUES (MOVIERATING_SEQ.NEXTVAL, 1, 'bbb', 2, '샤잠 노잼');
INSERT INTO MOVIERATING VALUES (MOVIERATING_SEQ.NEXTVAL, 1, 'bbb', 10, '어벤져스 존나기대됨');
INSERT INTO MOVIERATING VALUES (MOVIERATING_SEQ.NEXTVAL, 1, 'bbb', 8, '보고싶다');
INSERT INTO MOVIERATING VALUES (MOVIERATING_SEQ.NEXTVAL, 1, 'bbb', 2, '노잼일듯');
INSERT INTO MOVIERATING VALUES (MOVIERATING_SEQ.NEXTVAL, 1, 'bbb', 9, '아닌데?');
-- id = modifyMovieRating (평점&한줄평 수정)
UPDATE MOVIERATING SET MOVIERATINGPOINT=10, MOVIERATINGCOMMENT='샤잠 짱 재밌어요' WHERE MOVIENO=1 AND MEMBERID='aaa';
-- id = deleteMovieRating (평점&한줄평 삭제)
DELETE FROM MOVIERATING WHERE MOVIERATINGNO=2;
-- id = getMovieRating (해당 영화의 평점&한줄평 가져오기)
SELECT * FROM MOVIERATING WHERE MOVIENO=1 ORDER BY MOVIERATINGNO DESC;
-- id = getMovieRatingById (해당 영화에 대해 멤버가 평점을 작성했는지 여부)
SELECT * FROM MOVIERATING WHERE MOVIENO=1 AND MEMBERID='aaa';

-- ★ ★ ★ Screenup.xml (mapper) ★ ★ ★

-- id = getScreenupDate (상영관기준으로 상영등록 되어있는 날짜 가져오기)
SELECT SCREENUPSTARTDATE, SCREENUPENDDATE FROM SCREENUP WHERE SCREENNO='Y01' AND SCREENUPENDDATE >= SYSDATE;
-- id = insertScreenup (상영정보 등록)
INSERT INTO SCREENUP VALUES (SCREENUP_SEQ.NEXTVAL, 1, 'Y01', '2019-04-20', '2019-04-30');
INSERT INTO SCREENUP VALUES (SCREENUP_SEQ.NEXTVAL, 1, 'Y02', '2019-04-25', '2019-05-05');
INSERT INTO SCREENUP VALUES (SCREENUP_SEQ.NEXTVAL, 1, 'Y03', '2019-04-22', '2019-05-08');
INSERT INTO SCREENUP VALUES (SCREENUP_SEQ.NEXTVAL, 2, 'G02', '2019-04-30', '2019-05-15');
-- id = getScreenup (특정 상영정보 가져오기)
SELECT * FROM SCREENUP WHERE SCREENUPNO=3;
-- id = searchScreenup (각 조건별 상영정보 가져오기)
    -- movieNo (영화)
        SELECT CINEMANAME, SCREENNAME, S.CINEMANO, SU.* FROM CINEMA C, SCREEN S, SCREENUP SU WHERE C.CINEMANO=S.CINEMANO AND S.SCREENNO=SU.SCREENNO AND MOVIENO=1 AND SCREENUPENDDATE > SYSDATE;
    -- ScreenNo (극장)
        SELECT CINEMANAME, SCREENNAME, S.CINEMANO, SU.* FROM CINEMA C, SCREEN S, SCREENUP SU WHERE C.CINEMANO=S.CINEMANO AND S.SCREENNO=SU.SCREENNO AND C.CINEMANO='YONGSAN' AND SCREENUPENDDATE > SYSDATE;
    -- ScreenupDate (상영일)
        SELECT CINEMANAME, SCREENNAME, S.CINEMANO, SU.* FROM CINEMA C, SCREEN S, SCREENUP SU WHERE C.CINEMANO=S.CINEMANO AND S.SCREENNO=SU.SCREENNO AND '2019-04-15' BETWEEN SCREENUPSTARTDATE AND SCREENUPENDDATE;
-- id = selectDate (예매가능한 날짜)
SELECT SCREENUPSTARTDATE, SCREENUPENDDATE FROM SCREEN S, SCREENUP SU WHERE S.SCREENNO=SU.SCREENNO AND MOVIENO=2 AND CINEMANO='YONGSAN' ORDER BY SCREENUPSTARTDATE;
-- id = selectScreen (선택가능한 상영관)
SELECT S.SCREENNO, SCREENNAME FROM SCREEN S, SCREENUP SU WHERE S.SCREENNO=SU.SCREENNO AND MOVIENO=2 AND CINEMANO='YONGSAN' AND '2019-04-20' BETWEEN SCREENUPSTARTDATE AND SCREENUPENDDATE;
-- id = selectedAll (선택완료 후 해당하는 상영정보)
SELECT * FROM SCREENUP WHERE MOVIENO=1 AND SCREENNO='Y01'  AND '2019-04-12' BETWEEN SCREENUPSTARTDATE AND SCREENUPENDDATE;

-- ★ ★ ★ Booking.xml (mapper), BookingSeat.xml (mapper), SeatState.xml (mapper) ★ ★ ★

-- id = insertBooking, insertBookingSeat, insertSeatState (예매하기)
INSERT INTO BOOKING VALUES (BOOKING_SEQ.NEXTVAL, 3, 'aaa', '11', '2019-04-25', 2, 24000);
INSERT INTO BOOKINGSEAT VALUES (BOOKINGSEAT_SEQ.NEXTVAL, 2, 'A1');
INSERT INTO BOOKINGSEAT VALUES (BOOKINGSEAT_SEQ.NEXTVAL, 2, 'A2');
INSERT INTO SEATSTATE VALUES (SEATSTATE_SEQ.NEXTVAL, 'A1', '11', 'Y01', '2019-04-25');
INSERT INTO SEATSTATE VALUES (SEATSTATE_SEQ.NEXTVAL, 'A2', '11', 'Y01', '2019-04-25');
-- id = deleteBooking, deleteBookingSeat, deleteSeatState  (예매취소)
DELETE FROM SEATSTATE WHERE SEATNO='A1' AND TIMENO='11' AND SCREENNO='Y01' AND SEATSTATEDATE='2019-04-19';
DELETE FROM SEATSTATE WHERE SEATNO='A2' AND TIMENO='11' AND SCREENNO='Y01' AND SEATSTATEDATE='2019-04-19';
DELETE FROM BOOKINGSEAT WHERE BOOKINGNO=1;
DELETE FROM BOOKING WHERE BOOKINGNO=1;
-- id = getBooking (예매정보 가져오기)
SELECT M.MOVIENO, M.MOVIENAME, S.SCREENNAME, B.*, BS.SEATNO FROM MOVIE M, SCREEN S, SCREENUP SU, BOOKING B, BOOKINGSEAT BS
    WHERE M.MOVIENO=SU.MOVIENO AND S.SCREENNO=SU.SCREENNO AND SU.SCREENUPNO=B.SCREENUPNO AND B.BOOKINGNO=BS.BOOKINGNO AND B.BOOKINGNO=2;
-- id = getLastBookingNo (마지막 예약번호 가져오기)
SELECT BOOKINGNO FROM (SELECT B.*, ROWNUM RN FROM (SELECT * FROM BOOKING ORDER BY BOOKINGNO DESC) B) WHERE RN=1;
-- id = getSeatState (특정 영화의 좌석예약상태 가져오기)
SELECT * FROM SEATSTATE WHERE TIMENO='14' AND SCREENNO='Y01' AND SEATSTATEDATE='2019-04-28';
SELECT * FROM SEATSTATE WHERE TIMENO='14' AND SCREENNO='Y01' AND SEATSTATEDATE='2019-04-28' AND SEATNO='G4';
-- id = getCntSeatState (특정 상영관의 예약된 좌석수 가져오기)
SELECT COUNT(*) FROM SEATSTATE WHERE TIMENO='11' AND SCREENNO='Y01' AND SEATSTATEDATE='2019-04-25';
-- id = usePoint (포인트 사용)
UPDATE MEMBER SET MEMBERPOINT=MEMBERPOINT-11000 WHERE MEMBERID='bbb';
-- id = savePoint (포인트 적립)
UPDATE MEMBER SET MEMBERPOINT=MEMBERPOINT+(11000/20) WHERE MEMBERID='bbb';
UPDATE MEMBER SET MEMBERPOINT=MEMBERPOINT+(11000/10) WHERE MEMBERID='bbb';
-- id = accumulateAmount (구매금액 누적)
UPDATE MEMBER SET MEMBERAMOUNT=MEMBERAMOUNT+11000 WHERE MEMBERID='bbb';
-- id = upMemberGrade (회원등급 UP)
UPDATE MEMBER SET MEMBERGRADENO='VIP' WHERE MEMBERID='bbb' AND MEMBERGRADENO='NORMAL' AND MEMBERAMOUNT>=200000;

-- ★ ★ ★ Cinema.xml (mapper) ★ ★ ★
select * from seatstate;
-- id = selectCinema (선택가능한 극장)
SELECT C.* FROM CINEMA C, SCREEN S, SCREENUP SU WHERE C.CINEMANO=S.CINEMANO AND S.SCREENNO=SU.SCREENNO AND MOVIENO=1 GROUP BY C.CINEMANO, CINEMANAME;
-- id = listTime (시간리스트)
SELECT * FROM TIME;


SELECT * FROM (SELECT ROWNUM RN, M.* FROM
        	(SELECT M.*, MOVIERATING FROM MOVIE M LEFT JOIN 
        		(SELECT MOVIENO, AVG(MOVIERATINGPOINT) MOVIERATING FROM MOVIERATING GROUP BY MOVIENO) MR 
        			ON M.MOVIENO=MR.MOVIENO WHERE 1=1
        				AND MOVIENAME LIKE '%'||'헬'||'%' ORDER BY MOVIERELEASE DESC) M)
        			WHERE RN BETWEEN 1 AND 10;